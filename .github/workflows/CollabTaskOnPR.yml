name: Create Collaboration Task for Pull Request

on:
  pull_request:
    types: [opened]

jobs:
  create-skyline-task:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check for existing task link
        id: check_task_link
        run: |
          body="${{ github.event.pull_request.body }}"
          if echo "$body" | grep -Eq 'https://collaboration\.dataminer\.services/task/[0-9]+'; then
            echo "task_exists=true" >> $GITHUB_OUTPUT
          else
            echo "task_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Get Skyline access token
        id: get_token
        if: steps.check_task_link.outputs.task_exists == 'false'
        run: |
          response=$(curl -s -X POST https://api.skyline.be/Token \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "username=${{ secrets.SKYLINE_USERNAME }}" \
            -d "password=${{ secrets.SKYLINE_PASSWORD }}" \
            -d "grant_type=password")
          echo "API response: $response"
          token=$(echo "$response" | jq -r '.access_token')
          if [ "$token" == "null" ] || [ -z "$token" ]; then
            echo "Failed to retrieve access token"
            exit 1
          fi
          echo "token=$token" >> $GITHUB_OUTPUT

      - name: Post PR Details to Skyline
        if: steps.check_task_link.outputs.task_exists == 'false'
        uses: actions/github-script@v7
        env:
          SKYLINE_TOKEN: ${{ steps.get_token.outputs.token }}
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = `DIS [PR#${pr.number}] ${pr.title}`;
            const fullTitle = title;
            const author = pr.user.login;
            const commitMessage = pr.body || "No PR body provided.";
            const prUrl = pr.html_url;

            const files = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });
            const changedFiles = files.data.map(f => `- \`${f.filename}\``).join('\n');

            const description = `<p><font size="4"><b>COMPONENT</b></font></p>
              <p>DIS</p>
              <p><br></p>
              <p><font size="4"><b>DESCRIPTION</b></font></p>
              <p>This task is automatically generated from a DIS Pull Request</p>
              <p><br></p>
              <p><strong>PR URL:</strong> <a href="${prUrl}">${prUrl}</a></p>
              <p><br></p>
              <p><strong>Author:</strong> ${author}</p>
              <p><br></p>
              <p><strong>Commit Message:</strong></p>
              <p>${commitMessage}</p>
              <p><br></p>
              <p><strong>Files Changed:</strong></p>
              <ul>
              ${changedFiles.split('\n').map(file => `<li>${file.replace(/^- /, '')}</li>`).join('')}
              </ul>
              <p><br></p>
              <p><font size="4"><b>ACCEPTANCE CRITERIA</b></font></p>
              <ol>
                <li>Perform code review</li>
              </ol>`;

            const payload = {
              Title: title,
              Type: "Issue",
              Category: "DIS",
              Customer: { ID: "40" },
              Project: { ID: "16457" },
              Status: "Code Review",
              Assignee: { ID: "5121" },
              Description: description,
              FullTitle: fullTitle,
              Labels: [{ ID: "7095" }],
              Creator: { ID: "5121" }
            };

            const response = await fetch("https://api.skyline.be/api/dcp/Tasks", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${process.env.SKYLINE_TOKEN}`
              },
              body: JSON.stringify(payload)
            });

            if (!response.ok) {
              const text = await response.text();
              core.setFailed(`HTTP POST failed: ${response.status} - ${text}`);
            } else {
              core.info("PR details successfully posted.");
            }
